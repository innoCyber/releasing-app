apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "ptml.releasing"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "ptml.releasing.ReleasingTestRunner"

        buildConfigField("String", "BASE_URL", "\"http://192.168.43.115:3000/\"")
        vectorDrawables.useSupportLibrary true
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //kotlin
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutine"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$coroutine"

    //Android Kotlin extensions
    implementation "androidx.core:core-ktx:1.0.1"

    //appcompat
    implementation "androidx.appcompat:appcompat:$supportLibVersion"

    //multidex
    implementation 'androidx.multidex:multidex:2.0.1'

    //constraint
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    //material
    implementation "com.google.android.material:material:$materialLibVersion"

    // architecture components
    implementation "androidx.lifecycle:lifecycle-extensions:$archComponentsVersion"
    implementation "androidx.lifecycle:lifecycle-runtime:$archComponentsVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$archComponentsVersion"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation"com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpLoggingInterceptorVersion"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofitCoroutine"


    //dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    compileOnly 'javax.annotation:jsr250-api:1.0'


    //timber for logging
    implementation "com.jakewharton.timber:timber:$timberVersion"


    //leakcanary for detecting memory leaks
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"



    //permissions
    implementation "org.permissionsdispatcher:permissionsdispatcher:$permission_dispatcher"
    kapt "org.permissionsdispatcher:permissionsdispatcher-processor:$permission_dispatcher"


    //dialogs
    implementation 'com.yarolegovich:lovely-dialog:1.1.0'

    //secure shared preferences
    implementation 'com.scottyab:secure-preferences-lib:0.1.7'

    // unit testing
    testImplementation "com.google.dagger:dagger:$daggerVersion"
    testImplementation "com.google.dagger:dagger-android-support:$daggerVersion"
    testImplementation "junit:junit:$junitVersion"
    testImplementation 'android.arch.core:core-testing:1.1.1'
    testImplementation "io.mockk:mockk:$mockkVersion"

    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptTest "com.google.dagger:dagger-android-processor:$daggerVersion"



    //instrumentation testing
    androidTestImplementation "androidx.test:runner:$runnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test:runner:$testRunner"
    androidTestImplementation "androidx.test:rules:$testRunner"
    androidTestImplementation "androidx.test.ext:junit:$androidJunit"
    androidTestImplementation "com.google.dagger:dagger:$daggerVersion"
    androidTestImplementation "com.google.dagger:dagger-android-support:$daggerVersion"

    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
    kaptAndroidTest "com.google.dagger:dagger-android-processor:$daggerVersion"
}
