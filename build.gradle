// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        kotlin_version = '1.3.71'
    }
    repositories {
        maven {
            url 'https://maven.fabric.io/public'
        }
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'io.fabric.tools:gradle:1.28.1'
        classpath 'com.google.gms:google-services:4.2.0'

    }
}

allprojects {
    repositories {
        google()
        jcenter()

    }

    gradle.projectsEvaluated {
        tasks.withType(JavaCompile.class) {
            options.compilerArgs << "-Xmaxerrs" << "10000"
        }
    }
    afterEvaluate {
        if (project.plugins.hasPlugin("kotlin-kapt")) {
            kapt {
                javacOptions {
                    option("-Xmaxerrs", 10000)
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    compileSdkVersion = 28
    minSdkVersion = 16
    targetSdkVersion = 28
    supportLibVersion = '1.1.0'
    materialLibVersion = '1.1.0-beta01'
    constraintLayoutVersion = '1.1.3'
    archComponentsVersion = '2.2.0-alpha01'
    roomVersion = '2.1.0'
    pagingVersion = '2.1.0'
    retrofitVersion = "2.6.0"
    retrofitCoroutine = "0.9.2"
    okhttpVersion = "3.12.0"

    coroutine = '1.1.1'
    okhttpLoggingInterceptorVersion = "3.9.0"

    runnerVersion = '1.1.0-alpha4'
    rulesVersion = "1.0.1"
    junitVersion = "4.12"
    espressoVersion = '3.1.0-beta02'

    daggerVersion = '2.24'
    leakCanaryVersion = "1.6.3"
    timberVersion = "4.7.1"
    
    permission_dispatcher = '4.3.0'
    okhttpMockServer = '3.13.1'
    androidJunit = "1.1.0"
    testRunner = '1.1.1'
    mockkVersion = "1.9"

    glideVersion = "4.9.0"
    workerVersion = "2.1.0"
    assistedInjectVersion = "0.5.2"
    robolectricVersion = "4.3"
    coreTestVersion = "1.0.0"
    truthVersion = "1.0"

    getLocalProperty = { propertyKey ->
        Properties properties = new Properties()
        File propertiesFile = project.rootProject.file('local.properties')
        if (propertiesFile.canRead()) {
            properties.load(new FileInputStream(propertiesFile))
            return properties[propertyKey]
        } else {
            throw new GradleException("Could not read local.properties!")
        }
    }
}
